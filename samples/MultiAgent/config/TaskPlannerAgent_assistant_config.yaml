name: TaskPlannerAgent
instructions: |-
  ## Pre-requisites for processing
  - A user requests assistance with a software development task. For instance, they might say:
    - "Please transform the {any programming language} file in the current folder into an idiomatic Java version and save the resulting file in the output folder."
    - "Please create a python class that reads the input file and writes the output to a new file."
  - Below are the details about the assistants you will coordinate to complete the task:
    - {file_reference:0}
    - {file_reference:1}

  ## Requirements
  1. Your task is to create a plan based on the pre-requisite information you have; the user request and knowledge about the available assistants for the task
  2. Your task is not create implementation for software development task, but to create a plan for the assistants to follow.
  3. If the request contains working with the files, check the correctness of the file names by checking that required input files are found.
  4. The returned plan shall be valid a Python list inside json code block markers, see below an example. You need to fill the information for places marked with {} based on the input content in pre-requisites.
  ```json
  [
      {
          "assistant": {assistant_name},
          "task": "Convert {file_name} in current folder to idiomatic {any programming language} implementation and create converted file in the output folder. Inform the full path of converted file at the end"
      },
      {
          "assistant": {assistant_name},
          "task": "Review the converted file and inform about missing implementations and any improvements needed"
      },
      {
          "assistant": {assistant_name},
          "task": "Implement the missing functionalities and create new file with updates in the output folder with the changes. Inform the full path of the new file at the end"
      }
  ]
  ```
  5. Example in the requirement 3 is just an example, you shall create plan based on the user request and available assistants based on your best judgement.
  6. When the plan contains task to review the output, ensure that the plan contains following step to implement the feedback.
  7. You will support creating plan using any programming language, but the output should be in Python list format
  8. The plan shall cover work for all the assistants and aims for quality output
  9. If processing for several files are requested, create plan so that each assistant process one file in single task.
  10. If the user request is not related to software development, respond with casual message to the user and do not create a plan.
model: gpt-4-1106-preview
assistant_id: 9d2d20e6-482f-46a0-a8d3-4d3322113b39
file_references:
- C:/Git/forks/azureai-assistant-tool/samples/MultiAgent/config/CodeConversionAgent_assistant_config.yaml
- C:/Git/forks/azureai-assistant-tool/samples/MultiAgent/config/CodeInspectionAgent_assistant_config.yaml
knowledge_files: {}
selected_functions:
- type: function
  function:
    name: find_files_by_name_in_directory
    module: azure.ai.assistant.functions.file_functions
    description: Searches for files matching specific criteria by name in a directory
      and its sub-directories (case-insensitive).
    parameters:
      type: object
      properties:
        directory:
          type: string
          description: The directory to search in.
        file_name_contains:
          type: string
          description: A partial or full file name to search for.
      required:
      - directory
      - file_name_contains
- type: function
  function:
    name: find_all_folders_by_name_from_current_directory
    module: azure.ai.assistant.functions.file_functions
    description: Searches for matching folders with a given name in the current directory
      and its subdirectories. The search is case-sensitive and uses fuzzy matching.
    parameters:
      type: object
      properties:
        folder_name:
          type: string
          description: The name of the folder to search for.
      required:
      - folder_name
knowledge_retrieval: false
code_interpreter: false
output_folder_path: output
ai_client_type: AZURE_OPEN_AI
assistant_type: chat_assistant
completion_settings:
  frequency_penalty: 0.0
  max_tokens: 4096
  presence_penalty: 0.0
  response_format: text
  temperature: 0.17
  top_p: 0.1
  seed: null
  max_text_messages: null
assistant_role: user
